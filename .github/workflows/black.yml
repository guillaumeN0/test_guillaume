name: Black Code Format

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'

permissions:
  contents: read
  pull-requests: write

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install Black
        run: pip install black==23.12.0

      - name: Run Black Check
        id: black-check
        continue-on-error: true
        run: |
          black --check --verbose . 2>&1 | tee black_output.txt
          echo "BLACK_EXIT_CODE=${PIPESTATUS[0]}" >> $GITHUB_ENV

      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '## Black Formatting Report'

      - name: Prepare comment body
        run: |
          {
            echo "## Black Formatting Report"
            echo "\`\`\`"
            cat black_output.txt
            echo "\`\`\`"
            if [ "$BLACK_EXIT_CODE" = "0" ]; then
              echo -e "\n✅ All files are properly formatted!"
            else
              echo -e "\n⚠️ Some files need formatting. Please run \`black --version 23.12.0\` locally to fix the formatting."
            fi
          } > comment.md

      - name: Update or create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-file: comment.md
          edit-mode: replace
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Exit with Black's status
        if: env.BLACK_EXIT_CODE != '0'
        run: exit 1